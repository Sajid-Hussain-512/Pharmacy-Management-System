package designs;

import java.sql.Connection;
import static java.sql.DriverManager.getConnection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

public class OrderDetailsForm extends javax.swing.JInternalFrame {

    Connection connection = null;
    ArrayList<Integer> customerIDs = new ArrayList<>();
    ArrayList<String> customerNames = new ArrayList<>();
    ArrayList<String> customerPhones = new ArrayList<>();
    ArrayList<Integer> medicineIDs = new ArrayList<>();
    ArrayList<String> medicines = new ArrayList<>();
    ArrayList<Double> price = new ArrayList<>();
    ArrayList<Integer> maxQuantities = new ArrayList<>();
    DefaultTableModel tableModel;
    NumberFormat currencyInstance = NumberFormat.getCurrencyInstance(new Locale("en", "in"));
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

    public Connection getConnected() {

        try {
            Class.forName("org.postgresql.Driver");
        } catch (ClassNotFoundException classNotFoundException) {
            JOptionPane.showMessageDialog(null, classNotFoundException);
        }

        try {
            String url = "jdbc:postgresql://localhost:5432/postgres";
            String user = "postgres";
            String password = "postgres";

            connection = getConnection(url, user, password);
            // JOptionPane.showMessageDialog(null, "Connected");

        } catch (SQLException ex) {
            Logger.getLogger(MedicineMasterForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        return connection;
    }

    public OrderDetailsForm() {
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        initComponents();
        getConnected();
        autoSetFields();
        getDetails();
    }

    public void getDetails() {
        try {
            Statement statement = connection.createStatement();
            String selectQuery = "SELECT cid, cname, phone FROM customer_master";
            ResultSet resultSet = statement.executeQuery(selectQuery);

            customerIDs.clear();
            customerNames.clear();
            customerPhones.clear();

            name.removeAllItems();
            phone.removeAllItems();

            name.addItem("N.A");
            phone.addItem("N.A");

            while (resultSet.next()) {
                customerIDs.add(resultSet.getInt("cid"));
                customerNames.add(resultSet.getString("cname"));
                customerPhones.add(resultSet.getString("phone"));
                name.addItem(resultSet.getString("cname"));
                phone.addItem(resultSet.getString("phone"));
            }

            selectQuery = "SELECT mid, mname, stocks, price FROM medicine_master";
            resultSet = statement.executeQuery(selectQuery);

            medicineIDs.clear();
            medicines.clear();
            maxQuantities.clear();

            medicine.removeAllItems();
            medicine.addItem("N.A");
            while (resultSet.next()) {
                medicineIDs.add(resultSet.getInt("mid"));
                medicines.add(resultSet.getString("mname"));
                maxQuantities.add(resultSet.getInt("stocks"));
                price.add(resultSet.getDouble("price"));
                medicine.addItem(resultSet.getString("mname"));
            }

        } catch (SQLException sQLException) {
            JOptionPane.showMessageDialog(null, sQLException);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        separator = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        orderDetailsForm = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        customerIdLabel = new javax.swing.JLabel();
        customerID = new javax.swing.JTextField();
        phoneLabel = new javax.swing.JLabel();
        phone = new javax.swing.JComboBox<>();
        customerLabel = new javax.swing.JLabel();
        doctor = new javax.swing.JTextField();
        doctorLabel = new javax.swing.JLabel();
        name = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        orderDateLabel = new javax.swing.JLabel();
        deliveryDate = new com.toedter.calendar.JDateChooser();
        orderDate = new com.toedter.calendar.JDateChooser();
        deliveryDateLabel = new javax.swing.JLabel();
        rateLabel = new javax.swing.JTextField();
        status = new javax.swing.JComboBox<>();
        orderIdLabel = new javax.swing.JLabel();
        orderID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        orderLabel = new javax.swing.JLabel();
        medicineLabel = new javax.swing.JLabel();
        medicine = new javax.swing.JComboBox<>();
        statusLabel = new javax.swing.JLabel();
        quantityLabel = new javax.swing.JLabel();
        maxQuantity = new javax.swing.JTextField();
        quantity = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        totalLabel = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        toPayLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderListTable = new javax.swing.JTable();
        discountLabel = new javax.swing.JLabel();
        clearTable = new javax.swing.JButton();
        generateBill = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("orderDetails");
        setPreferredSize(new java.awt.Dimension(1070, 640));

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(1070, 640));

        separator.setBackground(new java.awt.Color(0, 153, 0));
        separator.setPreferredSize(new java.awt.Dimension(0, 100));

        javax.swing.GroupLayout separatorLayout = new javax.swing.GroupLayout(separator);
        separator.setLayout(separatorLayout);
        separatorLayout.setHorizontalGroup(
            separatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        separatorLayout.setVerticalGroup(
            separatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 6, Short.MAX_VALUE)
        );

        addButton.setBackground(new java.awt.Color(255, 255, 204));
        addButton.setFont(new java.awt.Font("Bodoni MT", 0, 18)); // NOI18N
        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        updateButton.setBackground(new java.awt.Color(255, 255, 204));
        updateButton.setFont(new java.awt.Font("Bodoni MT", 0, 18)); // NOI18N
        updateButton.setText("UPDATE");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(255, 255, 204));
        deleteButton.setFont(new java.awt.Font("Bodoni MT", 0, 18)); // NOI18N
        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        resetButton.setBackground(new java.awt.Color(255, 255, 204));
        resetButton.setFont(new java.awt.Font("Bodoni MT", 0, 18)); // NOI18N
        resetButton.setText("RESET");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(0, 153, 0));

        jSeparator2.setForeground(new java.awt.Color(0, 153, 0));
        jSeparator2.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jSeparator2.setPreferredSize(new java.awt.Dimension(0, 6));

        jPanel2.setBackground(new java.awt.Color(255, 204, 102));
        jPanel2.setPreferredSize(new java.awt.Dimension(729, 90));

        orderDetailsForm.setFont(new java.awt.Font("Quicksand Medium", 1, 36)); // NOI18N
        orderDetailsForm.setForeground(new java.awt.Color(255, 255, 255));
        orderDetailsForm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        orderDetailsForm.setText("ORDER DETAILS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(orderDetailsForm)
                .addGap(379, 379, 379))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(orderDetailsForm)
                .addGap(21, 21, 21))
        );

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));
        jPanel3.setPreferredSize(new java.awt.Dimension(1070, 95));

        nameLabel.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        nameLabel.setText("Customer's Name");

        customerIdLabel.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        customerIdLabel.setText("ID");

        customerID.setEditable(false);

        phoneLabel.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        phoneLabel.setText("Phone");

        phone.setEditable(true);
        phone.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        phone.setEnabled(false);

        customerLabel.setForeground(new java.awt.Color(102, 51, 255));
        customerLabel.setText("Customer Details");

        doctorLabel.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        doctorLabel.setText("Doctor's Name");

        name.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        name.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                nameItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(doctorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(name, 0, 273, Short.MAX_VALUE)
                            .addComponent(doctor))
                        .addGap(57, 57, 57)
                        .addComponent(customerIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(customerID, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(phoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(customerLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(customerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(name))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(customerID)
                        .addComponent(phoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(customerIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doctorLabel)
                    .addComponent(doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {customerID, customerIdLabel, doctor, doctorLabel, name, nameLabel, phone, phoneLabel});

        jPanel4.setBackground(new java.awt.Color(204, 255, 204));

        orderDateLabel.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        orderDateLabel.setText("Order Date");

        deliveryDate.setDateFormatString("dd-MM-yyyy");

        orderDate.setDateFormatString("dd-MM-y");
        orderDate.setEnabled(false);

        deliveryDateLabel.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        deliveryDateLabel.setText("Delivery Date");

        rateLabel.setEditable(false);
        rateLabel.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N

        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PENDING", "AVAILABLE" }));

        orderIdLabel.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        orderIdLabel.setText("Order ID");

        orderID.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel3.setText("Price");

        orderLabel.setForeground(new java.awt.Color(102, 102, 255));
        orderLabel.setText("Order Details");

        medicineLabel.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        medicineLabel.setText("Medicine");

        medicine.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        medicine.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                medicineItemStateChanged(evt);
            }
        });

        statusLabel.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        statusLabel.setText("Status");

        quantityLabel.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        quantityLabel.setText("Quantity");

        maxQuantity.setEditable(false);
        maxQuantity.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N

        quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantityKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(medicineLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(orderIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(orderID, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(medicine, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(orderDateLabel))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(orderDate, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(80, 80, 80)
                                .addComponent(deliveryDateLabel))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(quantityLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(maxQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(statusLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(deliveryDate, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                            .addComponent(status, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(29, 29, 29))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(orderLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(orderLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(deliveryDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(orderDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(orderIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(orderDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(deliveryDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maxQuantity)
                            .addComponent(quantityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(quantity)
                            .addComponent(medicineLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(statusLabel))
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(orderID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(medicine, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {deliveryDate, deliveryDateLabel, jLabel3, maxQuantity, medicine, medicineLabel, orderDate, orderDateLabel, orderID, orderIdLabel, quantity, quantityLabel, rateLabel, status, statusLabel});

        jPanel5.setBackground(new java.awt.Color(204, 255, 204));

        jLabel5.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("To Pay");

        totalLabel.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        totalLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jSeparator3.setForeground(new java.awt.Color(0, 204, 0));

        jLabel1.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Total");

        toPayLabel.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        toPayLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel2.setFont(new java.awt.Font("Consolas", 3, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Discount");

        orderListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sr. No.", "Medicine Name", "Price", "Units", "Delivery Date", "Available", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderListTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        orderListTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        orderListTable.setShowGrid(true);
        orderListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderListTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(orderListTable);

        discountLabel.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        discountLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        clearTable.setBackground(new java.awt.Color(255, 255, 204));
        clearTable.setFont(new java.awt.Font("Bodoni MT", 0, 18)); // NOI18N
        clearTable.setText("CLEAR ORDERS");
        clearTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearTableActionPerformed(evt);
            }
        });

        generateBill.setBackground(new java.awt.Color(255, 255, 204));
        generateBill.setFont(new java.awt.Font("Bodoni MT", 0, 18)); // NOI18N
        generateBill.setText("GENERATE BILL");
        generateBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateBillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(generateBill)
                        .addGap(539, 539, 539)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(toPayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(discountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(clearTable, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 939, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(clearTable, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(generateBill, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, 0)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(discountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(toPayLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {clearTable, generateBill});

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1080, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(281, 281, 281)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(updateButton)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton)
                        .addGap(18, 18, 18)
                        .addComponent(resetButton)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(separator, javax.swing.GroupLayout.DEFAULT_SIZE, 1080, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 1074, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 1062, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addButton, deleteButton, resetButton, updateButton});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetButton)
                    .addComponent(deleteButton)
                    .addComponent(updateButton)
                    .addComponent(addButton))
                .addGap(8, 8, 8)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addButton, deleteButton, resetButton, updateButton});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_nameItemStateChanged
        // TODO add your handling code here:
        int getIndex = name.getSelectedIndex();
        // System.out.println(getIndex);

        if (getIndex == 0) {
            customerID.setText("");
        }
        if (getIndex > 0) {
            customerID.setText(customerIDs.get(getIndex - 1).toString());
        }
        if (!customerPhones.isEmpty()) {
            phone.setSelectedIndex(getIndex);
        }
    }//GEN-LAST:event_nameItemStateChanged

    private void medicineItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_medicineItemStateChanged
        // TODO add your handling code here:
        int getIndex = medicine.getSelectedIndex();

        if (getIndex == 0) {
            maxQuantity.setText("/" + 0);
            rateLabel.setText("");
        }
        if (getIndex > 0) {
            maxQuantity.setText("/" + maxQuantities.get(getIndex - 1));
            rateLabel.setText(currencyInstance.format(price.get(getIndex - 1)));
        }
    }//GEN-LAST:event_medicineItemStateChanged

    private void quantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityKeyReleased
        // TODO add your handling code here:
        int maxQuantity = Integer.parseInt(this.maxQuantity.getText().substring(1));
        String text = this.quantity.getText();
        if (text.isBlank()) {
            return;
        }
        int quantity = Integer.parseInt(text);

        if (quantity > maxQuantity) {
            status.setSelectedIndex(0);
        } else {
            status.setSelectedIndex(1);
        }
    }//GEN-LAST:event_quantityKeyReleased

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here        
        try {
            int getIndex = this.medicine.getSelectedIndex() - 1;
            String medicineName = medicines.get(getIndex);
            double pricePerUnit = price.get(getIndex);
            int units = Integer.parseInt(this.quantity.getText());
            boolean available = status.getSelectedItem().equals("AVAILABLE");
            double cost = pricePerUnit * units;
            int maxQuantity = maxQuantities.get(getIndex);

            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String today = dateFormat.format(new java.util.Date());
            String dDate = dateFormat.format(deliveryDate.getDate());

            // Validating
            if (units == 0) {
                throw new Exception("Enter Valid Number of Units!!!");
            } else if (dDate.compareTo(today) < 0) {
                throw new Exception("Enter Valid Delivery Date!!!");
            } else if (units > maxQuantity) {
                if (dDate.compareTo(today) == 0) {
                    throw new Exception("""
                                        Enter Valid Date!!! 
                                        You have Limited Stocks!!!!""");
                } else {
                    tableModel = (DefaultTableModel) orderListTable.getModel();
                    cost = pricePerUnit * maxQuantity;
                    Object[] rowToAdd = {orderListTable.getRowCount() + 1, medicineName, currencyInstance.format(pricePerUnit), maxQuantity, today, true, currencyInstance.format(cost)};
                    tableModel.addRow(rowToAdd);
                    cost = pricePerUnit * (units - maxQuantity);
                    rowToAdd = new Object[]{orderListTable.getRowCount() + 1, medicineName, currencyInstance.format(pricePerUnit), (units - maxQuantity), dDate, available, currencyInstance.format(cost)};
                    tableModel.addRow(rowToAdd);
                    findTotal();
                }
            } else {
                tableModel = (DefaultTableModel) orderListTable.getModel();
                Object[] rowToAdd = {orderListTable.getRowCount() + 1, medicineName, currencyInstance.format(pricePerUnit), units, dDate, available, currencyInstance.format(cost)};
                tableModel.addRow(rowToAdd);
                findTotal();
            }
        } catch (IndexOutOfBoundsException exception) {
            JOptionPane.showMessageDialog(null, "Choose A Medicine!!!");
        } catch (Exception exception) {
            JOptionPane.showMessageDialog(null, exception.getMessage());
        }
        autoSetFields();
    }//GEN-LAST:event_addButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        autoSetFields();
        orderListTable.clearSelection();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:        
        tableModel = (DefaultTableModel) orderListTable.getModel();
        int selectedRow = orderListTable.getSelectedRow();
        if (selectedRow >= 0) {
            try {
                int getIndex = this.medicine.getSelectedIndex() - 1;
                String medicineName = medicines.get(getIndex);
                double pricePerUnit = price.get(getIndex);
                int units = Integer.parseInt(this.quantity.getText());
                boolean available = status.getSelectedItem().equals("AVAILABLE");
                double cost = pricePerUnit * units;

                String today = dateFormat.format(new java.util.Date());
                String dDate = dateFormat.format(deliveryDate.getDate());

                // Validating
                if (units == 0) {
                    throw new Exception("Enter Valid Number of Units!!!");
                } else if (dDate.compareTo(today) < 0) {
                    throw new Exception("Enter Valid Delivery Date!!!");
                } else {
                    tableModel = (DefaultTableModel) orderListTable.getModel();
                    tableModel.setValueAt(selectedRow + 1, selectedRow, 0);
                    tableModel.setValueAt(medicineName, selectedRow, 1);
                    tableModel.setValueAt(currencyInstance.format(pricePerUnit), selectedRow, 2);
                    tableModel.setValueAt(units, selectedRow, 3);
                    tableModel.setValueAt(dDate, selectedRow, 4);
                    tableModel.setValueAt(available, selectedRow, 5);
                    tableModel.setValueAt(currencyInstance.format(cost), selectedRow, 6);
                    findTotal();
                    orderListTable.clearSelection();
                    addButton.setEnabled(true);
                    autoSetFields();
                }
            } catch (IndexOutOfBoundsException exception) {
                JOptionPane.showMessageDialog(null, "Choose A Medicine!!!");
            } catch (Exception exception) {
                JOptionPane.showMessageDialog(null, exception.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Select a Row to Update!!!");
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = orderListTable.getSelectedRow();
        if (selectedRow >= 0) {
            int confirmation = JOptionPane.showConfirmDialog(null, "Delete This Order?", "Warning", JOptionPane.YES_NO_CANCEL_OPTION);
            if (confirmation == JOptionPane.YES_OPTION) {
                tableModel = (DefaultTableModel) orderListTable.getModel();
                tableModel.removeRow(selectedRow);
                for (int i = selectedRow; i < orderListTable.getRowCount(); i++) {
                    orderListTable.setValueAt(i + 1, i, 0);
                }
                findTotal();
                autoSetFields();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Select a Row to Delete!!!");
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void orderListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderListTableMouseClicked
        // TODO add your handling code here:        
        try {
            int selectedRow = orderListTable.getSelectedRow();
            medicine.setSelectedItem(orderListTable.getValueAt(selectedRow, 1));
            rateLabel.setText("" + orderListTable.getValueAt(selectedRow, 2));
            quantity.setText("" + orderListTable.getValueAt(selectedRow, 3));
            deliveryDate.setDate(dateFormat.parse((String) orderListTable.getValueAt(selectedRow, 4)));
            addButton.setEnabled(false);
        } catch (ParseException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_orderListTableMouseClicked

    private void clearTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearTableActionPerformed
        // TODO add your handling code here:
        if (orderListTable.getRowCount() > 0) {
            int confirmation = JOptionPane.showConfirmDialog(null, "Clear All Orders?", "Warning", JOptionPane.YES_NO_CANCEL_OPTION);
            if (confirmation == JOptionPane.YES_OPTION) {
                tableModel.setRowCount(0);
                totalLabel.setText("");
                discountLabel.setText("");
                toPayLabel.setText("");
                autoSetFields();
            }
        } else {
            JOptionPane.showMessageDialog(null, "No Records!!!");
        }
    }//GEN-LAST:event_clearTableActionPerformed

    private void generateBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateBillActionPerformed
        // TODO add your handling code here:

        try {
            validateForm();
            // C_ORDER_MASTER            
            String sqlQuery = "INSERT INTO c_order_master( oid, cid, d_name, \"o_date\")	VALUES ( ?,?,?,?);";
            PreparedStatement preparedStatement = connection.prepareStatement(sqlQuery);

            preparedStatement.setInt(1, Integer.valueOf(orderID.getText()));
            preparedStatement.setInt(2, Integer.valueOf(customerID.getText()));
            preparedStatement.setString(3, doctor.getText());

            Date oDate = orderDate.getDate();
//            System.out.println("oDate: " + oDate);
            preparedStatement.setDate(4, new java.sql.Date(oDate.getTime()));

            preparedStatement.executeUpdate();

            // C_ORDER_DETAILS
            int oid = Integer.parseInt(orderID.getText());
            for (int i = 0; i < orderListTable.getRowCount(); i++) {
                String medicineName = (String) orderListTable.getValueAt(i, 1);
                int mid = medicineIDs.get(medicines.indexOf(medicineName));
                int units = (int) orderListTable.getValueAt(i, 3);
                String date = (String) orderListTable.getValueAt(i, 4);

                java.sql.Date sqlDate = new java.sql.Date(new Date().getTime());

                Date dDate = dateFormat.parse(date);
                sqlDate = new java.sql.Date(dDate.getTime());
                // System.out.println("sqlDate: " + sqlDate);

                boolean delivered = (boolean) orderListTable.getValueAt(i, 5);

                sqlQuery = "INSERT INTO c_order_details( oid, mid, quantity, delivered, \"d_date\")	VALUES ( ?,?,?,?,?);";
                preparedStatement = connection.prepareStatement(sqlQuery);

                preparedStatement.setInt(1, oid);
                preparedStatement.setInt(2, mid);
                preparedStatement.setInt(3, units);
                preparedStatement.setBoolean(4, delivered);
                preparedStatement.setDate(5, sqlDate);

                preparedStatement.executeUpdate();

                if (delivered) {
                    sqlQuery = "UPDATE medicine_master "
                            + "SET stocks = stocks - ?"
                            + "WHERE mid = ?";
                    preparedStatement = connection.prepareStatement(sqlQuery);

                    preparedStatement.setInt(1, units);
                    preparedStatement.setInt(2, mid);

                    preparedStatement.executeUpdate();
                }

            }
            JOptionPane.showMessageDialog(null, "Added");
            PrintBill printBill = new PrintBill();
            printBill.setVisible(true);
            autoSetFields();
            name.setSelectedIndex(0);
            doctor.setText("");
            // this.dispose();
        } catch (SQLException sQLException) {
            JOptionPane.showMessageDialog(null, sQLException.getMessage());
        } catch (Exception exception) {
            JOptionPane.showMessageDialog(null, exception.getMessage());
        }

    }//GEN-LAST:event_generateBillActionPerformed

    public void autoSetFields() {
        try {
            Statement statement = connection.createStatement();
            String selectQuery = "SELECT oid FROM c_order_master";
            ResultSet resultSet = statement.executeQuery(selectQuery);
            int lastId = 0;
            while(resultSet.next()) {            
               lastId = resultSet.getInt("oid");
            }
            if(lastId == 0) {
                lastId = 10001;
            } else {
                lastId += 1;
            }
            orderID.setText("" + lastId);
            orderDate.setDate(new java.util.Date());
            deliveryDate.setDate(new java.util.Date());
            medicine.setSelectedIndex(0);
            rateLabel.setText("");
            quantity.setText("0");
            addButton.setEnabled(true);
        } catch (SQLException sQLException) {
            JOptionPane.showMessageDialog(null, sQLException);
        }
    }

    public void findTotal() {
        double total = 0.0;
        for (int i = 0; i < orderListTable.getRowCount(); i++) {
            total += Double.parseDouble(orderListTable.getValueAt(i, 6).toString().substring(1).replaceAll(",", ""));
        }
        double discount = 0.15 * total;
        int toPay = (int) (total - discount);
        totalLabel.setText(currencyInstance.format(total));
        discountLabel.setText(currencyInstance.format(discount));
        toPayLabel.setText(currencyInstance.format(toPay));
    }

    public void validateForm() throws Exception {
        if (name.getSelectedIndex() == 0 || doctor.getText().isBlank()) {
            throw new Exception("Enter Valid Customer Details!!!");
        }

        if (orderListTable.getRowCount() == 0) {
            throw new Exception("Add Medicines!!!");
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default loseparatorfeel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderDetailsForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderDetailsForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderDetailsForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderDetailsForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderDetailsForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton clearTable;
    private javax.swing.JTextField customerID;
    private javax.swing.JLabel customerIdLabel;
    private javax.swing.JLabel customerLabel;
    private javax.swing.JButton deleteButton;
    private com.toedter.calendar.JDateChooser deliveryDate;
    private javax.swing.JLabel deliveryDateLabel;
    private javax.swing.JLabel discountLabel;
    private javax.swing.JTextField doctor;
    private javax.swing.JLabel doctorLabel;
    private javax.swing.JButton generateBill;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField maxQuantity;
    private javax.swing.JComboBox<String> medicine;
    private javax.swing.JLabel medicineLabel;
    private javax.swing.JComboBox<String> name;
    private javax.swing.JLabel nameLabel;
    private com.toedter.calendar.JDateChooser orderDate;
    private javax.swing.JLabel orderDateLabel;
    private javax.swing.JLabel orderDetailsForm;
    private javax.swing.JTextField orderID;
    private javax.swing.JLabel orderIdLabel;
    private javax.swing.JLabel orderLabel;
    private javax.swing.JTable orderListTable;
    private javax.swing.JComboBox<String> phone;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JTextField quantity;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JTextField rateLabel;
    private javax.swing.JButton resetButton;
    private javax.swing.JPanel separator;
    private javax.swing.JComboBox<String> status;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel toPayLabel;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
